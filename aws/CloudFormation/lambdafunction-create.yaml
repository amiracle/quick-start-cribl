AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC: Publish flow logs to CloudWatch Logs, a cloudonaut.io template, contributed by https://github.com/statik'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentLogStack
    - Label:
        default: 'Lambda Function Paramters'
Parameters:
    - HECURL
    - HECTOKEN
Parameters:
  ParentLogStack:
    Description: 'Stack name of parent VPC CW Log Group template'
    Type: String
  HECURL:
    Type: String
    Description: URL for HTTP Event Collector Endpoint (http(s)://cribl-server-ip:8088)
  HECTOKEN:
    Type: String
    Description: HEC Authentication Token
  LambdaHandlerPath:  
    Type: String
    Description: Path of a Lambda Handler. 
    AllowedPattern: ^.*[^0-9]$
    ConstraintDescription: Must end with non-numeric character.
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: cribl-lambda-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Path: /
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        Fn::Sub: cribl-cwl-to-hec-lambda-function
      Description: LambdaFunctioni of nodejs10.x.
      Runtime: nodejs10.x
      Code:
        ZipFile:
          "exports.handler = function(event, context){\n
            var sample = sample;"
      Handler: ${LambdaHandlerPath}
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaRole
          - Arn
      Environment:
        Variables:
          ENV:
            Fn::Sub: ${EnvName}
          TZ: UTC
 SubcriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      RoleArn:
        Fn:GetAtt:
        -"CloudWatchIAMRole"
        -"Arn"
    LogGroupName:
     Ref: "LogGroup"
    FilterPattern: ""
    DestinationArn:
        Fn:GetAtt:
        - "LambdaFunction"
        - "Arn"
Outputs:
  LambdaRoleARN:
    Description: Role for Lambda execution.
    Value:
      Fn::GetAtt:
        - LambdaRole
        - Arn
    Export:
      Name:
        Fn::Sub: LambdaRole
  LambdaFunctionName:
    Value:
      Ref: LambdaFunction
  LambdaFunctionARN:
    Description: Lambda function ARN.
    Value:
      Fn::GetAtt:
        - LambdaFunction
        - Arn
    Export:
      Name:
        Fn::Sub: LambdaARN-${EnvName}