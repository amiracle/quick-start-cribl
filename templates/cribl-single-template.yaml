AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Cribl LogStream Single Deployment (qs-1s9hhq8an)

Parameters:
  sshKeyPair:
    Description: "REQUIRED: Name of an existing EC2 key pair."
    Type: AWS::EC2::KeyPair::KeyName
  amiId:
    Description: "OPTIONAL: Advanced setting. Leave blank unless advised to assign by Cribl Support."
    Type: String
  vpcId:
    Description: "REQUIRED: ID of your existing VPC."
    Type: AWS::EC2::VPC::Id
  subnetId:
    Description: "REQUIRED: ID of one of your existing Subnet IDs. This subnet must be in the same VPC as VPC ID above."
    Type: AWS::EC2::Subnet::Id
  sshAccessCidr:
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: "REQUIRED: CIDR IP range permitted to SSH access to the instance. We recommend you set this value to a trusted IP range."
  webAccessCidr:
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: "REQUIRED: The CIDR IP range permitted to access the LogStream web console. We recommend you set this value to a trusted IP range."
  instanceType:
    Description: EC2 instance type to provision the LogStream instance. If none specified, c5a.large will be used.
    Type: String
    Default: c5a.large
    AllowedValues:
      - c5.4xlarge
      - c5.2xlarge
      - c5.xlarge
      - c5.large
      - c5d.4xlarge
      - c5d.2xlarge
      - c5d.xlarge
      - c5d.large
      - c5a.4xlarge
      - c5a.2xlarge
      - c5a.xlarge
      - c5a.large
      - c5ad.4xlarge
      - c5ad.2xlarge
      - c5ad.xlarge
      - c5ad.large
    ConstraintDescription: Must contain valid instance type
  AdditionalPolicies:
    Type: CommaDelimitedList    
    Default:  "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore,arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
    Description: A comma separated list of Policy ARNs to add to the IAM role used by Logstream instances
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Instance Configuration
        Parameters:
          - sshKeyPair
          - instanceType
      - Label:
          default: Network Configuration
        Parameters:
          - vpcId
          - subnetId
          - webAccessCidr
          - sshAccessCidr
      - Label:
          default: Advanced Settings
        Parameters:
          - AdditionalPolicies
          - amiId
    ParameterLabels:
      sshKeyPair:
        default: SSH Key Name
      instanceType:
        default: EC2 Instance Type
      vpcId:
        default: VPC ID
      subnetId:
        default: Subnet ID
      webAccessCidr:
        default: Web Access CIDR
      sshAccessCidr:
        default: SSH Access CIDR

Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll "AWS::EC2::VPC::Id"
        AssertDescription: All subnets must in the VPC

Conditions:
  customAmiId: !Not [!Equals [!Ref amiId, ""]]
  

Mappings: {
    "RegionMap": {
        "ap-northeast-1": {
            "HVM64": "ami-00120f03047b368d6"
        },
        "ap-northeast-2": {
            "HVM64": "ami-09b769b46885614d2"
        },
        "ap-south-1": {
            "HVM64": "ami-060835b7cbc403867"
        },
        "ap-southeast-1": {
            "HVM64": "ami-05866b7ef11b53b9c"
        },
        "ap-southeast-2": {
            "HVM64": "ami-07eea4c79c2b66e98"
        },
        "ca-central-1": {
            "HVM64": "ami-0d61e8027c17db2c7"
        },
        "eu-central-1": {
            "HVM64": "ami-0647d75e41cdba604"
        },
        "eu-north-1": {
            "HVM64": "ami-0f288af15214f17cc"
        },
        "eu-west-1": {
            "HVM64": "ami-0da17a4f9bbfe8606"
        },
        "eu-west-2": {
            "HVM64": "ami-018e2e76fecef19ff"
        },
        "eu-west-3": {
            "HVM64": "ami-06f684dd87e0d610b"
        },
        "sa-east-1": {
            "HVM64": "ami-0e08bca36485a3bbe"
        },
        "us-east-1": {
            "HVM64": "ami-08cf3a5c503bb3c1d"
        },
        "us-east-2": {
            "HVM64": "ami-04cdad364bb74b78f"
        },
        "us-west-1": {
            "HVM64": "ami-032b6360d7c8656b7"
        },
        "us-west-2": {
            "HVM64": "ami-02ed085abbeae0785"
        }
    }
}

Resources:
  ec2SingleSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cribl LogStream Access
      VpcId: !Ref vpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref sshAccessCidr
          Description: SSH access to the LogStream instance
        - IpProtocol: tcp
          FromPort: 9000
          ToPort: 9000
          CidrIp: !Ref webAccessCidr
          Description: UI access to the LogStream instance
        - IpProtocol: tcp
          FromPort: 9997
          ToPort: 9997
          CidrIp: !Ref webAccessCidr
          Description: Splunk Forwarder access to the LogStream instance
        - IpProtocol: tcp
          FromPort: 8088
          ToPort: 8088
          CidrIp: !Ref webAccessCidr
          Description: Splunk HEC and HTTP access to the LogStream instance
        - IpProtocol: tcp
          FromPort: 9200
          ToPort: 9200
          CidrIp: !Ref webAccessCidr
          Description: Elastic Server access to the LogStream instance
        - IpProtocol: tcp
          FromPort: 10070
          ToPort: 10070
          CidrIp: !Ref webAccessCidr
          Description: TCP Inbound access to the LogStream instance
        - IpProtocol: tcp
          FromPort: 10090
          ToPort: 10090
          CidrIp: !Ref webAccessCidr
          Description: TCP JSON Inbound access to the LogStream instance

      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
          Description: Egress access

  s3DefaultDestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: Cribl LogStream default destination bucket

  LogstreamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: !Sub "/logstream/${AWS::StackName}/"
      ManagedPolicyArns: !Ref AdditionalPolicies
      Description: Cribl LogStream default IAM role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: S3Destinations
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource:
                  - !Sub ${s3DefaultDestinationBucket.Arn}
                  - !Sub ${s3DefaultDestinationBucket.Arn}/*
        - PolicyName: S3Sources
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetBucketLocation
                Resource: 
                  - !Sub ${s3DefaultDestinationBucket.Arn}
                  - !Sub ${s3DefaultDestinationBucket.Arn}/*
      Tags:
        - Key: Name
          Value: Cribl LogStream  IAM role

  iamDefaultInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: !Sub "/logstream/${AWS::StackName}/"
      Roles:
        - !Ref LogstreamRole


ec2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      MaxSize: 1
      MinSize: 1
      HealthCheckType: EC2
      LaunchTemplate:
        LaunchTemplateId: !Ref ec2launchTemplate
        Version: !GetAtt ec2launchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !Select [0, !Ref subnetIds]
        - !Select [1, !Ref subnetIds]
      Tags:
        - Key: Name
          Value: Cribl LogStream Single Instance ASG
          PropagateAtLaunch: false

  ec2AutoScalingGroupLifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName: !Ref ec2AutoScalingGroup
      DefaultResult: ABANDON
      HeartbeatTimeout: 3600
      LifecycleHookName: cribl-logstream-worker-shutdown
      LifecycleTransition: "autoscaling:EC2_INSTANCE_TERMINATING"

 ec2launchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceInitiatedShutdownBehavior: terminate
        ImageId:        
          !If [
            workerAmiId,
            !Ref workerAmiId,
            !If [ 
              isWorkerARM,
              !FindInMap [RegionMap, !Ref "AWS::Region", "ARM64"],
              !FindInMap [RegionMap, !Ref "AWS::Region", "HVM64"]
            ]
          ]

  ec2SingleInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        !If [
          customAmiId,
          !Ref amiId,
          !FindInMap [RegionMap, !Ref "AWS::Region", HVM64],
        ]
      KeyName: !Ref sshKeyPair
      InstanceType: !Ref instanceType
      IamInstanceProfile: !Ref iamDefaultInstanceProfile
      SubnetId: !Ref subnetId
      SecurityGroupIds:
        - !Ref ec2SingleSecurityGroup
      UserData: !Base64
        Fn::Sub:
          - |
              #cloud-config

              runcmd: 
                - /usr/local/bin/configure_logstream.sh -m single -b ${s3DefaultDestinationBucket}
                - sleep 10
                - cloud-init query -f "$(cat /opt/cribl_build/users.json.j2)" > /opt/cribl/local/cribl/auth/users.json
                - chown -R cribl:cribl /opt/cribl
                - yum update -y
                - cd /opt
                - curl -Lso - $(curl https://cdn.cribl.io/dl/latest-x64) | tar zxvf -
                - systemctl restart cribl
        
          - s3DefaultDestinationBucket: !Ref s3DefaultDestinationBucket
      Tags:
        - Key: Name
          Value: Cribl LogStream Single Instance
        - Key: Purpose
          Value: Machine data analysis

Outputs:
  logstreamWebUrl:
    Value: !Sub http://${ec2SingleInstance.PublicIp}:9000/login
    Description: Cribl LogStream Web URL (PublicIp)
  logstreamWebAccessCreds:
    Value: !Sub "admin / ${ec2SingleInstance}"
    Description: Default Web Access Credentials
  stackName:
    Value: !Sub "${AWS::StackName}"
    Description: CFN Stack Name
